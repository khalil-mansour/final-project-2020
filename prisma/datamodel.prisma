type User {
  id: ID! @id
  firebaseId: String! @unique
  type: UserType @relation(name: "UserUserType")
  name: String!
  lastName: String!
  avatar: String
  email: String! @unique
  groups: [UserGroup!]! @relation(name: "UserGroups", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Group {
  id: ID! @id
  name: String!
  address: Address! @relation(name: "GroupAddress", onDelete: CASCADE)
  admin: User! @relation(name: "GroupAdmin")
  users: [UserGroup!]! @relation(name: "GroupUsers", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserGroup {
  id: ID! @id
  user: User! @unique @relation(name: "UserGroups")
  group: Group! @unique @relation(name: "GroupUsers")
  joinAt: String!
}

type UserType {
  id: ID! @id
  type: String!
}

type Address {
  id: ID! @id
  country: String!
  province: String!
  city: String!
  street: String!
  apartmentUnit: String
  postalCode: String!
  group: Group! @relation(name: "GroupAddress")
}

type Invitation {
  id: ID! @id
  from: User! @relation(name: "InvitationUser")
  group: Group! @relation(name: "InvitationGroup")
  link: String!
  expiredAt: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}